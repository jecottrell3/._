Loaded plugins: fastestmirror
Available Packages
Name       : lam
Arch       : i386
Epoch      : 2
Version    : 7.1.2
Release    : 14.el5
Size       : 351 k
Repo       : base
Summary    : The LAM (Local Area Multicomputer) programming environment.
URL        : http://www.lam-mpi.org/
License    : BSD
Description: LAM (Local Area Multicomputer) is an Message-Passing Interface
           : (MPI) programming environment and development system for
           : heterogeneous computers on a network. With LAM/MPI, a dedicated
           : cluster or an existing network computing infrastructure can act as
           : one parallel computer to solve one problem. LAM/MPI is considered
           : to be "cluster friendly" because it offers daemon-based process
           : startup/control as well as fast client-to-client message passing
           : protocols. LAM/MPI can use TCP/IP and/or shared memory for message
           : passing (different RPMs are supplied for this -- see the main LAM
           : website at http://www.mpi.nd.edu/lam/ for details).<
           : 
           : LAM features a full implementation of MPI version 1 (with the
           : exception that LAM does not support cancelling of sends), and much
           : of version 2. Compliant applications are source code portable
           : between LAM and any other implementation of MPI. In addition to
           : meeting the standard, LAM/MPI offers extensive monitoring
           : capabilities to support debugging. Monitoring happens on two
           : levels: On one level, LAM/MPI has the hooks to allow a snapshot of
           : a process and message status to be taken at any time during an
           : application run. The status includes all aspects of synchronization
           : plus datatype map/signature, communicator group membership and
           : message contents (see the XMPI application on the main LAM
           : website). On the second level, the MPI library can produce a
           : cumulative record of communication, which can be visualized either
           : at runtime or post-mortem.

